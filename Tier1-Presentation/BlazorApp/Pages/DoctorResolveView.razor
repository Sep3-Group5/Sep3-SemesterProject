@page "/DoctorResolveView/{id:int}"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Domain.DTOs

@inject IAppointmentService appointmentService
@inject NavigationManager navMgr

<div class="card">
    @if (dto == null)
    {
        <label>Loading appointment data..</label>
    }
    else
    {
        <h3>Resolve appointment</h3>
        <div class="form-group field">
            <label>Diagnosis:</label>
            <input type="text" @bind="dto.Diagnosis"/>
        </div>
        
        <div class="form-group field">
            <label>Is the appointment resolved?</label>
            @* <select type="int" @bind="dto.Status"> *@
            @*     <option>Choose</option> *@
            @*     <option value=1>true</option> *@
            @*     <option value=0>false</option> *@
            @* </select> *@
            <InputCheckbox @bind-Value="dto.Status" />
            <p>Is Resolved: @dto.Status.ToString()</p>
        </div>
        
        
        <div class="button-row">
            <button @onclick="UpdateAsync" class="acceptbtn">Update</button>
        </div>
    }
    @if (!string.IsNullOrEmpty(msg))
    {
        <label style="color: red">@msg</label>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    
    private AppointmentResolveDto dto = null!;
    private string msg = "";
    
    protected override async Task OnInitializedAsync()
    {
        
        msg = "";
        try
        {
            Appointment appointmentData = await appointmentService.GetByIdAsync(Id);

            dto = new(Id)
            {
                Diagnosis = appointmentData.Diagnosis,
                Status = appointmentData.Status
            };
            if (appointmentData.Status == null)
            {
                appointmentData.Status = false;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    private async Task UpdateAsync()
    {
        try
        {
            await appointmentService.UpdateAsync(dto);
            navMgr.NavigateTo("/Doctor/ViewAppointments");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}